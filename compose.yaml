

services:
  postgres:
    build:
      context: .
      dockerfile: db.dockerfile
    ports:
      - "5432:5432"
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=123
        - POSTGRES_DB=test
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 3s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  go-app:
    build:
      context: .
      dockerfile: api.dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=123
      - DB_NAME=test
    networks:
      - my-network
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - path: ./
          target: /app
          action: sync+restart
        - path: ./go.mod
          action: rebuild


networks:
  my-network:
volumes:
  postgres-data:

